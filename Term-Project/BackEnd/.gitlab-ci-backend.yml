# # 공통 변수 설정: 백엔드 경로를 변수로 지정하여 여러 곳에서 사용할 수 있도록 설정
# variables:
#   SERVICE_SPRING_PATH: "./Term-Project/BackEnd"

# # 파이프라인에서 사용할 스테이지들 정의: 빌드, 테스트, 배포 단계로 구성
# stages:
#   - build
# #  - test
#   - deploy

# # 백엔드 서버 빌드 작업 정의
# build_spring_server:
#   stage: build
#   before_script:
#     - echo '백엔드 빌드 중...'  # 빌드 시작 메시지 출력
#     - chmod +x $SERVICE_SPRING_PATH/gradlew  # gradlew 파일에 실행 권한 부여
#   script:
#     - cd $SERVICE_SPRING_PATH  # 백엔드 경로로 이동
#     - ./gradlew clean assemble  # 전체 프로젝트 빌드 (모든 서브 모듈 포함)
#   artifacts:
#     paths:
#       - "$SERVICE_SPRING_PATH/**/build/libs/*.jar"  # 모든 서브 모듈의 JAR 파일을 아티팩트로 저장
#     expire_in: 1 week  # 아티팩트 보존 기간: 1주일 동안 보관

# # 백엔드 서버 테스트 작업 정의
# #test_spring_server:
# #  stage: test
# #  dependencies:
# #    - build_spring_server  # 테스트 단계는 빌드가 성공적으로 완료된 후에 실행
# #  before_script:
# #    - echo '백엔드 테스트 진행 중...'  # 테스트 시작 메시지 출력
# #    - chmod +x $SERVICE_SPRING_PATH/gradlew  # gradlew 파일에 실행 권한 부여
# #  script:
# #    - cd $SERVICE_SPRING_PATH  # 백엔드 경로로 이동
# #    - ./gradlew test  # 빌드된 결과물에 대해 테스트 수행
# #  variables:
# #    JASYPT_ENCRYPTOR_KEY: testKey  # 환경 변수 설정

# # 백엔드 서버 배포 작업
# deploy_spring_server:
#   stage: deploy
#   script:
#     - echo "백엔드 관련 도커 컨테이너 배포 중..."
#     - cd $SERVICE_SPRING_PATH
#     - docker-compose -f API-Gateway/docker-compose-api-gateway.yml --env-file .env-backend up --build -d
#     - docker-compose -f Service-Discovery/docker-compose-service-discovery.yml --env-file .env-backend up --build -d
#     - docker-compose -f FTP-Service/docker-compose-ftp-service.yml --env-file .env-backend up --build -d