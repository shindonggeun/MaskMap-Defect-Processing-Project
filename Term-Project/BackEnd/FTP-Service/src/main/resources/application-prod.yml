server:
  port: ${FTP_SERVER_PORT}  # .env 파일에서 포트를 주입받음

spring:
  application:
    name: ${FTP_SPRING_APPLICATION_NAME}  # .env 파일에서 서비스 이름을 주입받음

  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

  jpa:
    enabled: false  # JPA 비활성화 (Global-Module의 JpaAuditConfig 부분 참고)

  # Kafka Setting
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS_1}, ${KAFKA_BOOTSTRAP_SERVERS_2}, ${KAFKA_BOOTSTRAP_SERVERS_3} # 도커에서 설정한 내부 서비스명으로 접근 (내부 네트워크 이용)
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_URL}  # .env 파일에서 Eureka 서버 URL 주입
  instance:
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP}  # 호스트명 사용 설정
    leaseRenewalIntervalInSeconds: ${EUREKA_LEASE_RENEWAL_INTERVAL}  # 갱신 빈도
    leaseExpirationDurationInSeconds: ${EUREKA_LEASE_EXPIRATION_DURATION}  # 만료 시간

ftp:
  host: ${FTP_HOST}  # FTP 서버 정보 주입
  port: ${FTP_PORT}
  username: ${FTP_USERNAME}
  password: ${FTP_PASSWORD}
  remote-directory: ${FTP_REMOTE_DIRECTORY}
  local-directory: ${FTP_LOCAL_DIRECTORY}

jasypt:
  encryptor:
    key: ${JASYPT_ENCRYPTOR_KEY}